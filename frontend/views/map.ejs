<!DOCTYPE html>
<html>
<head>
    <title>Pathfinder - Un mondo di ombre | Roll20</title>
    <meta content='IE=Edge,chrome=1' http-equiv='X-UA-Compatible'>
    <meta content='initial-scale=1.0, width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0' name='viewport'>
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="format-detection" content="telephone=no">
    <meta charset="UTF-8">

    <link href='https://fonts.googleapis.com/css?family=Merriweather|Anton|Nunito|Rye|Kaushan+Script|Goblin+One|Crimson+Text|Montserrat|IM+Fell+DW+Pica|Della+Respira|Patrick+Hand|Contrail+One|Shadows+Into+Light|Candal&subset=latin,latin-ext' rel='stylesheet' type='text/css'>
    <link crossorigin='anonymous' href='https://use.fontawesome.com/releases/v5.7.0/css/all.css' integrity='sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ' rel='stylesheet'>
    <link href='/favicon.ico' rel='icon' type='image/x-icon'>
    <link href='/style.css?v=1.0' rel='stylesheet' type='text/css'>
    <link href='/map.css?v=1.2' rel='stylesheet' type='text/css'>
    <script src='/map.js?v=1.3'></script>

</head>
<body class='no-touch'>
    <svg style="display:none" xmlns="http://www.w3.org/2000/svg">
        <symbol id="torch-icon" viewBox="0 0 24 24">
            <path fill-rule="evenodd" clip-rule="evenodd" d="M7.52994 9.79C7.81994 12.4 10.4699 14 11.9999 14H12.5599C12.7599 14 14.1699 13.86 15.2399 12.8C16.5199 11.53 16.6899 9.43 16.3399 8C16.2899 7.79 16.2299 7.62 16.2099 7.57C15.8462 6.59281 15.2636 6.06334 14.7345 5.58239C14.5218 5.38906 14.3177 5.20357 14.1399 5C13.6799 4.47 13.2599 3.58 13.1299 2C13.0594 2.06687 12.9763 2.1365 12.8907 2.20838C12.7457 2.32998 12.5931 2.45802 12.4799 2.59C10.8699 4.59 10.7699 7.2 10.8299 8.59C10.6099 8.63 10.4299 8.62 10.2799 8.59C9.47994 8.41 8.85994 7.45 8.62994 6.19C8.34994 6.55 7.32994 7.97 7.52994 9.79ZM10.9999 21.9998L10.1982 14.8013C10.8014 15.055 11.4232 15.1998 12.0001 15.1998H12.5601C12.7616 15.1998 13.2205 15.1565 13.7818 14.9886L12.9999 21.9998H10.9999Z" fill="currentColor"/>
        </symbol>
        <symbol id="eye-icon" viewBox="0 0 24 24">
            <path fill-rule="evenodd" clip-rule="evenodd" d="M12 18C6.48 18 2 12 2 12C2 12 6.48 6 12 6C17.52 6 22 12 22 12C22 12 17.52 18 12 18ZM8.3 12C8.3 9.95655 9.95655 8.3 12 8.3C14.0435 8.3 15.7 9.95655 15.7 12C15.7 14.0435 14.0435 15.7 12 15.7C9.95655 15.7 8.3 14.0435 8.3 12ZM14.5 12C14.5 13.3807 13.3807 14.5 12 14.5C10.6193 14.5 9.5 13.3807 9.5 12C9.5 10.6193 10.6193 9.5 12 9.5C13.3807 9.5 14.5 10.6193 14.5 12Z" fill="currentColor"/>
        </symbol>
        <symbol id="invisible-icon" viewBox="0 0 24 24">
            <path fill-rule="evenodd" clip-rule="evenodd" d="M2.42417 1.57576C2.18985 1.34145 1.80995 1.34145 1.57564 1.57576C1.34132 1.81007 1.34132 2.18997 1.57564 2.42429L21.5756 22.4243C21.81 22.6586 22.1899 22.6586 22.4242 22.4243C22.6585 22.19 22.6585 21.8101 22.4242 21.5758L2.42417 1.57576ZM1.99988 12C1.99988 12 3.47981 10.018 5.78653 8.33224L8.44049 10.9862C8.3489 11.3084 8.29988 11.6485 8.29988 12C8.29988 14.0435 9.95642 15.7 11.9999 15.7C12.3514 15.7 12.6915 15.651 13.0137 15.5594L14.9197 17.4654C13.9959 17.7969 13.0155 18 11.9999 18C6.47988 18 1.99988 12 1.99988 12ZM11.9539 14.4996C10.6097 14.4753 9.52455 13.3902 9.50029 12.046L11.9539 14.4996ZM12.0459 9.50041L14.4995 11.954C14.4752 10.6098 13.3901 9.52467 12.0459 9.50041ZM15.6999 12C15.6999 12.3515 15.6509 12.6916 15.5593 13.0138L18.2132 15.6678C20.52 13.982 21.9999 12 21.9999 12C21.9999 12 17.5199 6 11.9999 6C10.9843 6 10.0038 6.20311 9.08006 6.5346L10.9861 8.44061C11.3082 8.34903 11.6483 8.3 11.9999 8.3C14.0433 8.3 15.6999 9.95655 15.6999 12Z" fill="currentColor"/>
        </symbol>
        <symbol id="hand-pan-icon" viewBox="0 0 24 24">
            <path fill-rule="evenodd" clip-rule="evenodd" d="M13.4001 4C13.4001 4.16936 13.4703 4.32233 13.5832 4.43142L15.5759 6.42417C15.8102 6.65848 16.1901 6.65848 16.4244 6.42417C16.6588 6.18985 16.6588 5.80995 16.4244 5.57564L15.4488 4.6L20.5515 4.6L19.5759 5.57564C19.3416 5.80995 19.3416 6.18985 19.5759 6.42417C19.8102 6.65848 20.1901 6.65848 20.4244 6.42417L22.4187 4.42987C22.4403 4.40887 22.4603 4.38625 22.4785 4.36222C22.5047 4.32778 22.5266 4.29115 22.5443 4.25305C22.5904 4.15399 22.608 4.04495 22.597 3.93829C22.5957 3.92532 22.5939 3.91239 22.5918 3.89951C22.59 3.88905 22.5879 3.87862 22.5856 3.86824C22.5837 3.8598 22.5817 3.8514 22.5794 3.84303C22.553 3.74508 22.5013 3.65252 22.4244 3.57564L20.4244 1.57564C20.1901 1.34132 19.8102 1.34132 19.5759 1.57564C19.3416 1.80995 19.3416 2.18985 19.5759 2.42417L20.5517 3.4L15.4486 3.4L16.4244 2.42417C16.6587 2.18985 16.6587 1.80995 16.4244 1.57564C16.1901 1.34132 15.8102 1.34132 15.5759 1.57564L13.5759 3.57564C13.5147 3.63684 13.4695 3.70798 13.4403 3.78386C13.4143 3.85092 13.4001 3.9238 13.4001 4Z" fill="currentColor"/>
        </symbol>
    </svg>
    
    <div class="roll20-interface">
        <!-- Toolbar Laterale Sinistra -->
        <div class="left-toolbar" id="leftToolbar">
            <!-- Pulsante Toggle -->
            <div class="toolbar-toggle">
                <button class="toggle-btn" id="toolbarToggle" title="Apri/Chiudi Toolbar">
                    <i class="fas fa-chevron-right" id="toggleIcon"></i>
                </button>
            </div>
            
            <!-- Contenuto Toolbar -->
            <div class="toolbar-content" id="toolbarContent">
                <!-- Strumento Seleziona & Sposta -->
                <div class="tool-group">
                    <button class="tool-btn active" data-tool="select" title="Seleziona & Sposta">
                        <i class="fas fa-mouse-pointer"></i>
                    </button>
                </div>
                
                <!-- Strumenti Layer -->
                <div class="tool-group">
                    <div class="tool-label">Layer</div>
                    <button class="tool-btn layer-btn active" data-layer="tokens" title="Token & Oggetti">
                        <i class="fas fa-chess-pawn"></i>
                    </button>
                    <button class="tool-btn layer-btn" data-layer="map" title="Mappa">
                        <i class="fas fa-map"></i>
                    </button>
                    <button class="tool-btn layer-btn" data-layer="background" title="Sfondo">
                        <i class="fas fa-image"></i>
                    </button>
                    <button class="tool-btn layer-btn" data-layer="lighting" title="Illuminazione Dinamica">
                        <i class="fas fa-lightbulb"></i>
                    </button>
                    
                    <!-- Espansione gruppo Layer -->
                    <div class="tool-group-expanded">
                        <div class="tool-label">Layer</div>
                        <button class="tool-btn layer-btn" data-layer="tokens" title="Token & Oggetti">
                            <i class="fas fa-chess-pawn"></i>
                        </button>
                        <button class="tool-btn layer-btn" data-layer="map" title="Mappa">
                            <i class="fas fa-map"></i>
                        </button>
                        <button class="tool-btn layer-btn" data-layer="background" title="Sfondo">
                            <i class="fas fa-image"></i>
                        </button>
                        <button class="tool-btn layer-btn" data-layer="lighting" title="Illuminazione Dinamica">
                            <i class="fas fa-lightbulb"></i>
                        </button>
                    </div>
                </div>
                
                <!-- Strumenti di Disegno -->
                <div class="tool-group">
                    <div class="tool-label">Disegno</div>
                    <button class="tool-btn" data-tool="freehand" title="Mano Libera">
                        <i class="fas fa-pencil-alt"></i>
                    </button>
                    <button class="tool-btn" data-tool="shapes" title="Forme">
                        <i class="fas fa-square"></i>
                    </button>
                    <button class="tool-btn" data-tool="polygon" title="Poligono/Linea">
                        <i class="fas fa-draw-polygon"></i>
                    </button>
                    
                    <!-- Espansione gruppo Disegno -->
                    <div class="tool-group-expanded">
                        <div class="tool-label">Disegno</div>
                        <button class="tool-btn" data-tool="freehand" title="Mano Libera">
                            <i class="fas fa-pencil-alt"></i>
                        </button>
                        <button class="tool-btn" data-tool="shapes" title="Forme">
                            <i class="fas fa-square"></i>
                        </button>
                        <button class="tool-btn" data-tool="polygon" title="Poligono/Linea">
                            <i class="fas fa-draw-polygon"></i>
                        </button>
                        <button class="tool-btn" data-tool="text" title="Testo">
                            <i class="fas fa-font"></i>
                        </button>
                        <button class="tool-btn" data-tool="eraser" title="Gomma">
                            <i class="fas fa-eraser"></i>
                        </button>
                    </div>
                </div>
                
                <!-- Strumento FX -->
                <div class="tool-group">
                    <button class="tool-btn" data-tool="fx" title="Effetti FX">
                        <i class="fas fa-magic"></i>
                    </button>
                    <div class="tool-group-expanded">
                        <div class="tool-label">Effetti Speciali</div>
                        <button class="tool-btn" data-tool="fx" title="Effetti speciali">
                            <i class="fas fa-magic"></i>
                        </button>
                        <button class="tool-btn" data-tool="particles" title="Particelle">
                            <i class="fas fa-sparkles"></i>
                        </button>
                        <button class="tool-btn" data-tool="weather" title="Meteo">
                            <i class="fas fa-cloud-rain"></i>
                        </button>
                        <button class="tool-btn" data-tool="lighting-fx" title="Effetti luce">
                            <i class="fas fa-lightbulb"></i>
                        </button>
                    </div>
                </div>
                
                <!-- Strumento Zoom -->
                <div class="tool-group">
                    <button class="tool-btn" data-tool="zoom" title="Zoom">
                        <i class="fas fa-search-plus"></i>
                    </button>
                    <div class="tool-group-expanded">
                        <div class="tool-label">Controlli Zoom</div>
                        <button class="tool-btn" data-tool="zoom-in" title="Zoom In">
                            <i class="fas fa-search-plus"></i>
                        </button>
                        <button class="tool-btn" data-tool="zoom-out" title="Zoom Out">
                            <i class="fas fa-search-minus"></i>
                        </button>
                        <button class="tool-btn" data-tool="zoom-fit" title="Adatta alla finestra">
                            <i class="fas fa-expand-arrows-alt"></i>
                        </button>
                        <button class="tool-btn" data-tool="zoom-reset" title="Reset Zoom">
                            <i class="fas fa-undo"></i>
                        </button>
                    </div>
                </div>
                
                <!-- Strumento Righello -->
                <div class="tool-group">
                    <button class="tool-btn" data-tool="ruler" title="Righello">
                        <i class="fas fa-ruler"></i>
                    </button>
                    <div class="tool-group-expanded">
                        <div class="tool-label">Strumenti Misura</div>
                        <button class="tool-btn" data-tool="ruler" title="Righello">
                            <i class="fas fa-ruler"></i>
                        </button>
                        <button class="tool-btn" data-tool="measure-area" title="Misura Area">
                            <i class="fas fa-vector-square"></i>
                        </button>
                        <button class="tool-btn" data-tool="measure-cone" title="Cono">
                            <i class="fas fa-play"></i>
                        </button>
                        <button class="tool-btn" data-tool="measure-circle" title="Cerchio">
                            <i class="fas fa-circle"></i>
                        </button>
                    </div>
                </div>
                
                <!-- Nebbia di Guerra -->
                <div class="tool-group">
                    <button class="tool-btn" data-tool="fog" title="Nebbia di Guerra">
                        <i class="fas fa-cloud"></i>
                    </button>
                    <div class="tool-group-expanded">
                        <div class="tool-label">Nebbia di Guerra</div>
                        <button class="tool-btn" data-tool="fog-reveal" title="Rivela area">
                            <i class="fas fa-eye"></i>
                        </button>
                        <button class="tool-btn" data-tool="fog-hide" title="Nascondi area">
                            <i class="fas fa-eye-slash"></i>
                        </button>
                        <button class="tool-btn" data-tool="fog-clear" title="Rimuovi tutta">
                            <i class="fas fa-sun"></i>
                        </button>
                        <button class="tool-btn" data-tool="fog-reset" title="Reset nebbia">
                            <i class="fas fa-cloud"></i>
                        </button>
                    </div>
                </div>
                
                <!-- Tracciamento Turni -->
                <div class="tool-group">
                    <button class="tool-btn" data-tool="initiative" title="Tracciamento Turni">
                        <i class="fas fa-list-ol"></i>
                    </button>
                </div>
                
                <!-- Tiri di Dadi -->
                <div class="tool-group">
                    <button class="tool-btn" data-tool="dice" title="Tiri di Dadi">
                        <i class="fas fa-dice-d20"></i>
                    </button>
                    <div class="tool-group-expanded">
                        <div class="tool-label">Tiri di Dadi</div>
                        <button class="tool-btn" data-tool="d4" title="D4">
                            <i class="fas fa-dice-four"></i>
                        </button>
                        <button class="tool-btn" data-tool="d6" title="D6">
                            <i class="fas fa-dice-six"></i>
                        </button>
                        <button class="tool-btn" data-tool="d8" title="D8">
                            <i class="fas fa-dice"></i>
                        </button>
                        <button class="tool-btn" data-tool="d10" title="D10">
                            <i class="fas fa-dice"></i>
                        </button>
                        <button class="tool-btn" data-tool="d12" title="D12">
                            <i class="fas fa-dice"></i>
                        </button>
                        <button class="tool-btn" data-tool="d20" title="D20">
                            <i class="fas fa-dice-d20"></i>
                        </button>
                    </div>
                </div>
                
                <!-- Strumento Aiuto -->
                <div class="tool-group">
                    <button class="tool-btn" data-tool="help" title="Aiuto">
                        <i class="fas fa-question-circle"></i>
                    </button>
                </div>
                
                <!-- Gestione Token -->
                <div class="tool-group">
                    <div class="tool-label">Gestione Token</div>
                    <button class="tool-btn" data-tool="clear-tokens" title="Rimuovi tutti i token">
                        <i class="fas fa-trash-alt"></i>
                    </button>
                </div>
                
                <!-- Modalità Scuro/Chiaro -->
                <div class="tool-group">
                    <button class="tool-btn" data-tool="theme" title="Modalità Scuro/Chiaro">
                        <i class="fas fa-adjust"></i>
                    </button>
                </div>
            </div>
        </div>
        
        <!-- Area principale -->
        <div class="main-area">
            <!-- Pannello Layer (nascosto di default) -->
            <div class="layers-panel" id="layersPanel" style="display: none;">
                <div class="layers-header">
                    <i class="fas fa-layer-group"></i> Gestione Layer
                    <button class="close-panel" id="closeLayersPanel">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
                <div class="layers-content">
                    <div class="layer-item active" data-layer="tokens">
                        <i class="fas fa-chess-pawn"></i>
                        <span>Token & Oggetti</span>
                        <div class="layer-controls">
                            <button class="layer-visibility" title="Visibilità"><i class="fas fa-eye"></i></button>
                            <button class="layer-lock" title="Blocca"><i class="fas fa-unlock"></i></button>
                        </div>
                    </div>
                    <div class="layer-item" data-layer="map">
                        <i class="fas fa-map"></i>
                        <span>Mappa</span>
                        <div class="layer-controls">
                            <button class="layer-visibility" title="Visibilità"><i class="fas fa-eye"></i></button>
                            <button class="layer-lock" title="Blocca"><i class="fas fa-unlock"></i></button>
                        </div>
                    </div>
                    <div class="layer-item" data-layer="background">
                        <i class="fas fa-image"></i>
                        <span>Sfondo</span>
                        <div class="layer-controls">
                            <button class="layer-visibility" title="Visibilità"><i class="fas fa-eye"></i></button>
                            <button class="layer-lock" title="Blocca"><i class="fas fa-unlock"></i></button>
                        </div>
                    </div>
                    <div class="layer-item" data-layer="lighting">
                        <i class="fas fa-lightbulb"></i>
                        <span>Illuminazione</span>
                        <div class="layer-controls">
                            <button class="layer-visibility" title="Visibilità"><i class="fas fa-eye"></i></button>
                            <button class="layer-lock" title="Blocca"><i class="fas fa-unlock"></i></button>
                        </div>
                    </div>
                    <div class="layer-item" data-layer="audio">
                        <i class="fas fa-volume-up"></i>
                        <span>Audio</span>
                        <div class="layer-controls">
                            <button class="layer-visibility" title="Visibilità"><i class="fas fa-eye"></i></button>
                            <button class="layer-lock" title="Blocca"><i class="fas fa-unlock"></i></button>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Pannello Audio (nascosto di default) -->
            <div class="audio-panel" id="audioPanel" style="display: none;">
                <div class="audio-header">
                    <i class="fas fa-volume-up"></i> Controlli Audio
                    <button class="close-panel" id="closeAudioPanel">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
                <div class="audio-content">
                    <div class="audio-section">
                        <h4>Musica di Sottofondo</h4>
                        <div class="audio-track">
                            <div class="track-info">
                                <i class="fas fa-music"></i>
                                <span>Taverna Medievale</span>
                            </div>
                            <div class="track-controls">
                                <button class="play-btn"><i class="fas fa-play"></i></button>
                                <input type="range" class="volume-slider" id="track1-volume" name="track1-volume" min="0" max="100" value="50">
                                <span class="volume-display">50%</span>
                            </div>
                        </div>
                        <div class="audio-track">
                            <div class="track-info">
                                <i class="fas fa-music"></i>
                                <span>Battaglia Epica</span>
                            </div>
                            <div class="track-controls">
                                <button class="play-btn"><i class="fas fa-play"></i></button>
                                <input type="range" class="volume-slider" id="track2-volume" name="track2-volume" min="0" max="100" value="70">
                                <span class="volume-display">70%</span>
                            </div>
                        </div>
                    </div>
                    <div class="audio-section">
                        <h4>Effetti Sonori</h4>
                        <div class="sfx-grid">
                            <button class="sfx-button" data-sound="sword">
                                <i class="fas fa-sword"></i>
                                <span>Spada</span>
                            </button>
                            <button class="sfx-button" data-sound="magic">
                                <i class="fas fa-magic"></i>
                                <span>Magia</span>
                            </button>
                            <button class="sfx-button" data-sound="door">
                                <i class="fas fa-door-open"></i>
                                <span>Porta</span>
                            </button>
                            <button class="sfx-button" data-sound="footsteps">
                                <i class="fas fa-walking"></i>
                                <span>Passi</span>
                            </button>
                        </div>
                    </div>
                    <div class="audio-section">
                        <h4>Volume Generale</h4>
                        <div class="master-volume">
                            <i class="fas fa-volume-up"></i>
                            <input type="range" class="master-volume-slider" id="master-volume" name="master-volume" min="0" max="100" value="75">
                            <span class="master-volume-display">75%</span>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Pulsante Back to Campaign -->
            <div class="back-to-campaign">
                <button class="back-btn" id="backToCampaign" title="Torna alle Campagne">
                    <i class="fas fa-arrow-left"></i>
                    <span>Back to Campaign</span>
                </button>
            </div>
            
            <!-- Canvas di gioco -->
            <div class="canvas-container">
                <div class="game-canvas" id="gameCanvas">
                    <!-- I token verranno caricati dinamicamente -->
                </div>
                
                <!-- Widget Zoom Verticale (stile Roll20) -->
                <div class="zoom-widget-vertical">
                    <button class="zoom-btn-vertical" id="zoomInVertical" title="Zoom In">
                        <i class="fas fa-plus"></i>
                    </button>
                    <div class="zoom-slider-container">
                        <input type="range" id="zoomSlider" class="zoom-slider" min="25" max="400" value="100" orient="vertical">
                        <div class="zoom-display-vertical" id="zoomDisplayVertical">100%</div>
                    </div>
                    <button class="zoom-btn-vertical" id="zoomOutVertical" title="Zoom Out">
                        <i class="fas fa-minus"></i>
                    </button>
                    <button class="zoom-btn-vertical zoom-reset" id="zoomResetVertical" title="Reset Zoom">
                        <i class="fas fa-expand-arrows-alt"></i>
                    </button>
                </div>
            </div>
        </div>
        
        <!-- Sidebar con Tab -->
        <div class="sidebar">
            <!-- Tab Navigation -->
            <div class="tab-navigation">
                <button class="tab-btn active" data-tab="chat" title="Chat">
                    <i class="fas fa-comments"></i>
                    <span>Chat</span>
                </button>
                <button class="tab-btn" data-tab="assets" title="Art & Assets">
                    <i class="fas fa-palette"></i>
                    <span>Assets</span>
                </button>
                <button class="tab-btn" data-tab="journal" title="Journal">
                    <i class="fas fa-users"></i>
                    <span>Journal</span>
                </button>
                <button class="tab-btn" data-tab="compendium" title="Compendium">
                    <i class="fas fa-book"></i>
                    <span>Compendium</span>
                </button>
                <button class="tab-btn" data-tab="collections" title="Collections">
                    <i class="fas fa-puzzle-piece"></i>
                    <span>Collections</span>
                </button>
                <button class="tab-btn" data-tab="settings" title="Settings">
                    <i class="fas fa-cog"></i>
                    <span>Settings</span>
                </button>
            </div>
            
            <!-- Tab Content -->
            <div class="tab-content">
                <!-- Tab Chat -->
                <div class="tab-panel active" id="chat-panel">
                    <div class="panel-header">
                        <h3>Chat & Comunicazione</h3>
                    </div>
                    <div class="panel-body">
                        <div class="chat-container">
                            <div class="chat-messages" id="chatMessages">
                                <!-- I messaggi della chat verranno caricati qui -->
                            </div>
                            <div class="chat-input-container">
                                <input type="text" id="chatInput" placeholder="Scrivi un messaggio..." maxlength="500">
                                <button id="sendMessage" title="Invia messaggio">
                                    <i class="fas fa-paper-plane"></i>
                                </button>
                            </div>
                        </div>
                        <div class="dice-roller">
                            <h4>Lanci di Dadi</h4>
                            <div class="dice-buttons">
                                <button class="dice-btn" data-dice="d4">d4</button>
                                <button class="dice-btn" data-dice="d6">d6</button>
                                <button class="dice-btn" data-dice="d8">d8</button>
                                <button class="dice-btn" data-dice="d10">d10</button>
                                <button class="dice-btn" data-dice="d12">d12</button>
                                <button class="dice-btn" data-dice="d20">d20</button>
                                <button class="dice-btn" data-dice="d100">d100</button>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Tab Assets -->
                <div class="tab-panel" id="assets-panel">
                    <div class="panel-header">
                        <h3>Art & Assets</h3>
                        <div class="asset-controls">
                            <button class="btn-small" id="refreshAssets" title="Aggiorna Assets">
                                <i class="fas fa-sync-alt"></i>
                            </button>
                            <button class="btn-small" id="uploadAsset" title="Carica Asset">
                                <i class="fas fa-upload"></i>
                            </button>
                        </div>
                    </div>
                    <div class="panel-body">
                        <div class="asset-categories">
                            <h4>Categorie</h4>
                            <div class="category-selector">
                                <select id="assetCategorySelect" class="category-dropdown">
                                    <option value="all">Tutti</option>
                                    <option value="audio">Audio</option>
                                    <option value="backgrounds">Backgrounds</option>
                                    <option value="props">Props</option>
                                    <option value="tokens">Tokens</option>
                                </select>
                            </div>
                        </div>
                        
                        <div class="asset-search">
                            <input type="text" placeholder="Cerca assets..." class="search-input" id="assetSearchInput">
                            <button class="search-btn" id="assetSearchBtn"><i class="fas fa-search"></i></button>
                        </div>
                        
                        <div class="asset-loading" id="assetLoading" style="display: none;">
                            <i class="fas fa-spinner fa-spin"></i> Caricamento assets...
                        </div>
                        
                        <div class="asset-grid" id="assetGrid">
                            <!-- Gli asset verranno caricati dinamicamente qui -->
                        </div>
                        
                        <div class="asset-empty" id="assetEmpty" style="display: none;">
                            <i class="fas fa-image"></i>
                            <p>Nessun asset trovato per questa categoria</p>
                            <button class="btn-primary" id="uploadFirstAsset">Carica il primo asset</button>
                        </div>
                        
                        <!-- Overlay per la form di caricamento token -->
                        <div class="token-upload-overlay" id="tokenUploadOverlay" style="display: none;"></div>
                        
                        <!-- Form di caricamento token con ridimensionamento -->
                        <div class="token-upload-form" id="tokenUploadForm" style="display: none;">
                            <div class="form-header">
                                <h4>Carica e Ridimensiona Token</h4>
                                <button class="close-form" id="closeTokenForm">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                            <div class="form-body">
                                <div class="upload-section">
                                    <div class="file-input-group">
                                        <label for="tokenBackgroundImage">Immagine del Token:</label>
                                        <input type="file" id="tokenBackgroundImage" accept="image/png" class="file-input">
                                    </div>
                                    <div class="file-input-group">
                                        <label>Bordo del Token:</label>
                                        <div class="border-gallery" id="tokenBorderGallery">
                                            <div class="border-loading">Caricamento bordi...</div>
                                        </div>
                                    </div>

                                </div>
                                
                                <div class="editor-section" id="tokenEditorSection" style="display: none;">
                                    <div class="editor-controls">
                                        <label for="tokenLayerSelect">Modifica:</label>
                                        <select id="tokenLayerSelect" class="layer-select">
                                            <option value="background">Immagine Token</option>
                                            <option value="circle">Area di Ritaglio</option>
                                        </select>
                                    </div>
                                    
                                    <div class="zoom-controls">
                                        <label for="tokenZoomSlider">Zoom:</label>
                                        <input type="range" id="tokenZoomSlider" class="zoom-slider" min="0.1" max="3" step="0.1" value="1">
                                        <span id="tokenZoomValue">100%</span>
                                    </div>
                                    
                                    <div class="canvas-container">
                                        <canvas id="tokenCanvas" class="token-canvas"></canvas>
                                    </div>
                                    
                                    <div class="editor-instructions">
                                        <p><strong>Controlli:</strong></p>
                                        <ul>
                                            <li>Trascina con il mouse per spostare</li>
                                            <li>Usa la rotella del mouse per ridimensionare</li>
                                            <li>Il cerchio rosso indica l'area di ritaglio finale</li>
                                        </ul>
                                    </div>
                                </div>
                                
                                <div class="form-actions">
                                    <button class="btn-secondary" id="cancelTokenUpload">Annulla</button>
                                    <button class="btn-primary" id="generateTokenButton" style="display: none;">Genera Token</button>
                                    <button class="btn-success" id="saveTokenButton" style="display: none;">Salva Token</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Tab Journal -->
                <div class="tab-panel" id="journal-panel">
                    <div class="panel-header">
                        <h3>Journal & Personaggi</h3>
                    </div>
                    <div class="panel-body">
                        <div class="journal-categories">
                            <h4>Categorie</h4>
                            <div class="category-list">
                                <button class="category-btn active" data-category="characters">Personaggi</button>
                                <button class="category-btn" data-category="npcs">PNG</button>
                                <button class="category-btn" data-category="handouts">Handout</button>
                                <button class="category-btn" data-category="notes">Note</button>
                            </div>
                        </div>
                        
                        <div class="journal-search">
                            <input type="text" placeholder="Cerca nel journal..." class="search-input" id="journal-search" name="journal-search">
                            <button class="search-btn"><i class="fas fa-search"></i></button>
                        </div>
                        
                        <div class="journal-list">
                            <div class="journal-item" data-type="character">
                                <i class="fas fa-user"></i>
                                <span>Personaggio Giocatore 1</span>
                                <button class="view-btn"><i class="fas fa-eye"></i></button>
                            </div>
                            <div class="journal-item" data-type="npc">
                                <i class="fas fa-users"></i>
                                <span>PNG Importante</span>
                                <button class="view-btn"><i class="fas fa-eye"></i></button>
                            </div>
                            <div class="journal-item" data-type="handout">
                                <i class="fas fa-scroll"></i>
                                <span>Mappa del Tesoro</span>
                                <button class="view-btn"><i class="fas fa-eye"></i></button>
                            </div>
                        </div>
                        
                        <div class="journal-actions">
                            <button class="action-btn"><i class="fas fa-plus"></i> Nuovo</button>
                            <button class="action-btn"><i class="fas fa-folder"></i> Organizza</button>
                        </div>
                    </div>
                </div>
                
                <!-- Tab Compendium -->
                <div class="tab-panel" id="compendium-panel">
                    <div class="panel-header">
                        <h3>Compendium</h3>
                    </div>
                    <div class="panel-body">
                        <div class="compendium-categories">
                            <h4>Categorie</h4>
                            <div class="category-list">
                                <button class="category-btn active" data-category="spells">Incantesimi</button>
                                <button class="category-btn" data-category="items">Oggetti</button>
                                <button class="category-btn" data-category="monsters">Mostri</button>
                                <button class="category-btn" data-category="rules">Regole</button>
                                <button class="category-btn" data-category="feats">Talenti</button>
                            </div>
                        </div>
                        
                        <div class="compendium-search">
                            <input type="text" placeholder="Cerca nel compendium..." class="search-input" id="compendium-search" name="compendium-search">
                            <button class="search-btn"><i class="fas fa-search"></i></button>
                        </div>
                        
                        <div class="compendium-list">
                            <div class="compendium-item" data-type="spell">
                                <i class="fas fa-magic"></i>
                                <span>Palla di Fuoco</span>
                                <button class="view-btn"><i class="fas fa-eye"></i></button>
                            </div>
                            <div class="compendium-item" data-type="item">
                                <i class="fas fa-sword"></i>
                                <span>Spada Lunga +1</span>
                                <button class="view-btn"><i class="fas fa-eye"></i></button>
                            </div>
                            <div class="compendium-item" data-type="monster">
                                <i class="fas fa-dragon"></i>
                                <span>Drago Rosso</span>
                                <button class="view-btn"><i class="fas fa-eye"></i></button>
                            </div>
                        </div>
                        
                        <div class="compendium-actions">
                            <button class="action-btn"><i class="fas fa-download"></i> Importa</button>
                            <button class="action-btn"><i class="fas fa-filter"></i> Filtri</button>
                        </div>
                    </div>
                </div>
                
                <!-- Tab Collections -->
                <div class="tab-panel" id="collections-panel">
                    <div class="panel-header">
                        <h3>Collections & Macro</h3>
                    </div>
                    <div class="panel-body">
                        <div class="collections-categories">
                            <h4>Categorie</h4>
                            <div class="category-list">
                                <button class="category-btn active" data-category="macros">Macro</button>
                                <button class="category-btn" data-category="scripts">Script</button>
                                <button class="category-btn" data-category="modules">Moduli</button>
                                <button class="category-btn" data-category="api">API</button>
                            </div>
                        </div>
                        
                        <div class="collections-search">
                            <input type="text" placeholder="Cerca macro/script..." class="search-input" id="collections-search" name="collections-search">
                            <button class="search-btn"><i class="fas fa-search"></i></button>
                        </div>
                        
                        <div class="collections-list">
                            <div class="collection-item" data-type="macro">
                                <i class="fas fa-code"></i>
                                <span>Attacco Base</span>
                                <button class="run-btn"><i class="fas fa-play"></i></button>
                                <button class="edit-btn"><i class="fas fa-edit"></i></button>
                            </div>
                            <div class="collection-item" data-type="macro">
                                <i class="fas fa-dice-d20"></i>
                                <span>Tiro Salvezza</span>
                                <button class="run-btn"><i class="fas fa-play"></i></button>
                                <button class="edit-btn"><i class="fas fa-edit"></i></button>
                            </div>
                            <div class="collection-item" data-type="script">
                                <i class="fas fa-cogs"></i>
                                <span>Auto-Iniziativa</span>
                                <button class="run-btn"><i class="fas fa-play"></i></button>
                                <button class="edit-btn"><i class="fas fa-edit"></i></button>
                            </div>
                        </div>
                        
                        <div class="collections-actions">
                            <button class="action-btn"><i class="fas fa-plus"></i> Nuova Macro</button>
                            <button class="action-btn"><i class="fas fa-folder"></i> Organizza</button>
                        </div>
                    </div>
                </div>
                
                <!-- Tab Settings -->
                <div class="tab-panel" id="settings-panel">
                    <div class="panel-header">
                        <h3>Impostazioni</h3>
                    </div>
                    <div class="panel-body">
                        <div class="settings-group">
                            <h4>Audio/Video</h4>
                            <div class="setting-item">
                                <label>Volume Master:</label>
                                <input type="range" id="masterVolume" min="0" max="100" value="50">
                                <span id="volumeDisplay">50%</span>
                            </div>
                            <div class="setting-item">
                                <label>
                                    <input type="checkbox" id="enableMicrophone"> Abilita Microfono
                                </label>
                            </div>
                            <div class="setting-item">
                                <label>
                                    <input type="checkbox" id="enableCamera"> Abilita Camera
                                </label>
                            </div>
                        </div>
                        
                        <div class="settings-group">
                            <h4>Interfaccia</h4>
                            <div class="setting-item">
                                <label>
                                    <input type="checkbox" id="darkMode"> Modalità Scura
                                </label>
                            </div>
                            <div class="setting-item">
                                <label>
                                    <input type="checkbox" id="legacyMode"> Modalità Legacy
                                </label>
                            </div>
                            <div class="setting-item">
                                <label>Dimensione UI:</label>
                                <select id="uiScale">
                                    <option value="small">Piccola</option>
                                    <option value="medium" selected>Media</option>
                                    <option value="large">Grande</option>
                                </select>
                            </div>
                        </div>
                        
                        <div class="settings-group">
                            <h4>Sessione</h4>
                            <div class="setting-item">
                                <button class="action-btn danger"><i class="fas fa-sign-out-alt"></i> Esci dalla Sessione</button>
                            </div>
                            <div class="setting-item">
                                <button class="action-btn"><i class="fas fa-save"></i> Salva Impostazioni</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    

    
    <script>
        // Variabili globali - recuperate dal localStorage/sessionStorage
        // currentCampaignId e currentMapId sono già dichiarati in map.js
        let tokens = [];
        // isDragging, currentToken, startX, startY, draggedAsset sono già dichiarati in map.js
        let draggedTokenType = null;
        
        // Recupera i dati completi della campagna dal localStorage
        let currentCampaignData = null;
        try {
            const campaignDataStr = localStorage.getItem('current_campaign_data');
            if (campaignDataStr) {
                currentCampaignData = JSON.parse(campaignDataStr);
                console.log('MAP.EJS: Campaign data loaded from localStorage:', currentCampaignData);
            }
        } catch (error) {
            console.error('MAP.EJS: Error parsing campaign data from localStorage:', error);
        }
        
        // Verifica che abbiamo un campaign ID valido
        if (!currentCampaignId) {
            console.error('No campaign ID found in storage, redirecting to campaigns page');
            window.location.href = '/campaigns';
        }
        
        // Aggiorna il titolo della pagina con il nome della campagna se disponibile
        if (currentCampaignData && currentCampaignData.name) {
            document.title = `${currentCampaignData.name} - PFVTT Map`;
        }
        const gameCanvas = document.getElementById('gameCanvas');
        
        // Funzionalità base per il clone di Roll20
        
        // Gestione chat
        const chatInput = document.getElementById('chatInput');
        const sendButton = document.getElementById('sendMessage');
        
        if (chatInput) {
            chatInput.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    sendChatMessage();
                }
            });
        }
        
        if (sendButton) {
            sendButton.addEventListener('click', sendChatMessage);
        }
        
        function sendChatMessage() {
            const chatInput = document.getElementById('chatInput');
            if (chatInput) {
                const message = chatInput.value.trim();
                if (message) {
                    addChatMessage('Giocatore', message);
                    chatInput.value = '';
                }
            }
        }
        
        function addChatMessage(sender, message) {
            const chatMessages = document.getElementById('chatMessages');
            if (chatMessages) {
                const messageDiv = document.createElement('div');
                messageDiv.className = 'chat-message';
                messageDiv.innerHTML = `
                    <div class="chat-sender">${sender}</div>
                    <div class="chat-content">${message}</div>
                `;
                chatMessages.appendChild(messageDiv);
                chatMessages.scrollTop = chatMessages.scrollHeight;
            }
        }
        
        // Gestione tab navigation
        document.querySelectorAll('.tab-btn').forEach(button => {
            button.addEventListener('click', function() {
                const targetTab = this.dataset.tab;
                
                // Rimuovi active da tutti i tab
                document.querySelectorAll('.tab-btn').forEach(btn => btn.classList.remove('active'));
                document.querySelectorAll('.tab-panel').forEach(panel => panel.classList.remove('active'));
                
                // Attiva il tab selezionato
                this.classList.add('active');
                const targetPanel = document.getElementById(targetTab + '-panel');
                if (targetPanel) {
                    targetPanel.classList.add('active');
                }
            });
        });
        
        // Caricamento token dal backend
        async function loadTokens() {
            try {
                console.log('[PFVTT Map] Loading tokens for map:', currentMapId);
                const response = await fetch(`/api/map-tokens?map_id=${currentMapId}`);
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                const data = await response.json();
                // Assicurati che tokens sia sempre un array
                tokens = Array.isArray(data) ? data : (data && data.tokens ? data.tokens : []);
                console.log('[PFVTT Map] Loaded tokens:', tokens);
                renderTokens();
            } catch (error) {
                console.error('[PFVTT Map Error] Failed to load tokens', error);
                tokens = []; // Inizializza come array vuoto in caso di errore
                addChatMessage('Sistema', 'Errore nel caricamento dei token');
            }
        }
        
        // Eliminazione di tutti i token dalla mappa
        async function clearAllTokens() {
            if (!tokens || tokens.length === 0) {
                console.log('[PFVTT Map] No tokens to clear');
                addChatMessage('Sistema', 'Non ci sono token da rimuovere');
                return;
            }
            
            if (!confirm(`Sei sicuro di voler rimuovere tutti i ${tokens.length} token dalla mappa?\n\nQuesta azione non può essere annullata.`)) {
                return;
            }
            
            try {
                console.log('[PFVTT Map] Clearing all tokens from map:', currentMapId);
                
                // Elimina ogni token dal database
                const deletePromises = tokens.map(async (token) => {
                    const response = await fetch(`/api/map-tokens/${token.id}`, {
                        method: 'DELETE'
                    });
                    if (!response.ok) {
                        throw new Error(`Failed to delete token ${token.id}: ${response.status}`);
                    }
                    return response.json();
                });
                
                await Promise.all(deletePromises);
                
                // Aggiorna l'array locale e ricarica la visualizzazione
                tokens = [];
                renderTokens();
                
                console.log('[PFVTT Map] All tokens cleared successfully');
                addChatMessage('Sistema', 'Tutti i token sono stati rimossi dalla mappa');
                
            } catch (error) {
                console.error('[PFVTT Map Error] Failed to clear tokens', error);
                addChatMessage('Sistema', 'Errore nella rimozione dei token');
                // Ricarica i token per sincronizzare lo stato
                loadTokens();
            }
        }
        
        // Rendering dei token sulla mappa
        function renderTokens() {
            const canvas = document.getElementById('gameCanvas');
            // Rimuovi token esistenti
            canvas.querySelectorAll('.token').forEach(token => token.remove());
            
            // Verifica che tokens sia un array prima di iterare
            if (Array.isArray(tokens)) {
                tokens.forEach(token => {
                    const tokenElement = createTokenElement(token);
                    canvas.appendChild(tokenElement);
                });
            } else {
                console.warn('[PFVTT Map] Tokens is not an array:', tokens);
            }
        }
        
        // Creazione elemento token
        function createTokenElement(tokenData) {
            const tokenElement = document.createElement('div');
            
            // Determina il tipo di token (player o npc) basato sul nome
            const isPlayerToken = ['hero', 'warrior', 'mage', 'rogue'].includes(tokenData.name.toLowerCase());
            tokenElement.className = isPlayerToken ? 'token player' : 'token npc';
            tokenElement.dataset.tokenId = tokenData.id;
            
            // Calcola posizione pixel dalla griglia
            const gridSize = 50;
                const tokenSize = 48;
                const offset = (gridSize - tokenSize) / 2;
                const pixelX = tokenData.grid_x * gridSize + offset;
                const pixelY = tokenData.grid_y * gridSize + offset;
            
            tokenElement.style.left = pixelX + 'px';
            tokenElement.style.top = pixelY + 'px';
            
            // Cerca l'asset associato al token
            let assetImageUrl = null;
            if (tokenData.asset_id && window.allAssets) {
                const associatedAsset = window.allAssets.find(asset => asset.id == tokenData.asset_id);
                if (associatedAsset && associatedAsset.file_url) {
                    assetImageUrl = associatedAsset.file_url;
                }
            }
            
            // Imposta l'aspetto del token
            if (assetImageUrl) {
                // Usa l'immagine dell'asset se disponibile
                tokenElement.style.backgroundImage = `url('${assetImageUrl}')`;
                tokenElement.style.backgroundSize = 'cover';
                tokenElement.style.backgroundPosition = 'center';
                tokenElement.style.backgroundRepeat = 'no-repeat';
            } else {
                // Fallback al token generico
                const letter = tokenData.name ? tokenData.name.charAt(0).toUpperCase() : 'T';
                const color = (tokenData.properties && tokenData.properties.color) || '#ff6b6b';
                
                const svgData = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 40 40"><circle cx="20" cy="20" r="18" fill="${color}"/><text x="20" y="26" text-anchor="middle" fill="white" font-size="12" font-weight="bold">${letter}</text></svg>`;
                tokenElement.style.backgroundImage = `url('data:image/svg+xml,${encodeURIComponent(svgData)}')`;
            }
            
            // Aggiungi tooltip con il nome del token
            tokenElement.title = tokenData.name;
            
            // Aggiungi eventi di trascinamento
            addTokenDragEvents(tokenElement);
            
            return tokenElement;
        }
        
        // Aggiungi evento per deselezionare quando si clicca sul canvas
        if (gameCanvas) {
            gameCanvas.addEventListener('click', function(e) {
                // Deseleziona solo se il click è direttamente sul canvas
                if (e.target === gameCanvas) {
                    if (selectedToken) {
                        selectedToken.classList.remove('selected');
                        selectedToken = null;
                    }
                }
            });
        }
        
        // Esponi le funzioni come variabili globali per map.js
        window.createTokenElement = createTokenElement;
        window.addTokenDragEvents = addTokenDragEvents;
        window.selectToken = selectToken;
        
        // Funzione per loggare le coordinate dei token nel file frontend.log
        async function logTokenCoordinates(action, tokenId, tokenName, gridX, gridY, oldGridX = null, oldGridY = null) {
            try {
                const timestamp = new Date().toISOString();
                let logMessage;
                
                if (action === 'CREATE') {
                    logMessage = `[${timestamp}] TOKEN CREATED - ID: ${tokenId}, Name: ${tokenName}, Coordinates: (${gridX}, ${gridY})`;
                } else if (action === 'MOVE') {
                    logMessage = `[${timestamp}] TOKEN MOVED - ID: ${tokenId}, Name: ${tokenName}, Old: (${oldGridX}, ${oldGridY}), New: (${gridX}, ${gridY})`;
                }
                
                // Invia il log al backend per scriverlo nel file
                await fetch('/api/log-token-coordinates', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        message: logMessage
                    })
                });
            } catch (error) {
                console.error('[PFVTT Map Error] Failed to log token coordinates', error);
            }
        }
        
        // Aggiornamento posizione token
        async function updateTokenPosition(tokenId, gridX, gridY) {
            try {
                const token = tokens.find(t => t.id == tokenId);
                const oldGridX = token?.x_position || 0;
                const oldGridY = token?.y_position || 0;
                
                console.log(`[PFVTT Map] TOKEN MOVEMENT - ID: ${tokenId}`);
                console.log(`[PFVTT Map] OLD GRID: ${oldGridX}, ${oldGridY}`);
                console.log(`[PFVTT Map] NEW GRID: ${gridX}, ${gridY}`);
                
                const response = await fetch(`/api/map-tokens/${tokenId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        x_position: gridX,
                        y_position: gridY
                    })
                });
                
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                
                // Aggiorna il token locale
                const tokenIndex = tokens.findIndex(t => t.id == tokenId);
                if (tokenIndex !== -1) {
                    tokens[tokenIndex].x_position = gridX;
                    tokens[tokenIndex].y_position = gridY;
                }
                
                // Logga le coordinate del token spostato
                await logTokenCoordinates('MOVE', tokenId, token?.name || 'Unknown', gridX, gridY, oldGridX, oldGridY);
                
                console.log(`[PFVTT Map] Token ${tokenId} moved successfully`);
            } catch (error) {
                console.error('[PFVTT Map Error] Failed to update token position', error);
                addChatMessage('Sistema', 'Errore nell\'aggiornamento della posizione del token');
            }
        }
        
        // Drag and drop dalla libreria token rimosso - non ci sono più token predefiniti
        
        // Drop events are now handled in map.js to avoid duplicates
        
        // Token and asset creation functions are now handled in map.js to avoid duplicates
        
        // Funzione per aggiungere eventi di drag agli asset sulla mappa
        function addAssetDragEvents(assetElement) {
            assetElement.addEventListener('mousedown', function(e) {
                if (e.button !== 0) return; // Solo click sinistro
                
                isDragging = true;
                currentToken = this; // Riutilizza la logica esistente
                
                const rect = gameCanvas.getBoundingClientRect();
                const assetRect = this.getBoundingClientRect();
                
                const mouseX = (e.clientX - rect.left - panX) / scale;
                const mouseY = (e.clientY - rect.top - panY) / scale;
                
                const assetX = parseInt(this.style.left);
                const assetY = parseInt(this.style.top);
                
                startX = mouseX - assetX;
                startY = mouseY - assetY;
                
                this.style.zIndex = '1000';
                e.preventDefault();
            });
        }
        
        // Variabile per tracciare il token selezionato
        let selectedToken = null;
        
        // Funzione per selezionare un token
        function selectToken(token) {
            // Rimuovi selezione precedente
            if (selectedToken) {
                selectedToken.classList.remove('selected');
            }
            
            // Seleziona il nuovo token
            selectedToken = token;
            if (selectedToken) {
                selectedToken.classList.add('selected');
            }
        }
        
        // Funzione per aggiungere eventi di drag ai token
        function addTokenDragEvents(token) {
            let mouseDownTime = 0;
            let hasMoved = false;
            
            token.addEventListener('mousedown', function(e) {
                if (e.button !== 0) return; // Solo click sinistro
                
                mouseDownTime = Date.now();
                hasMoved = false;
                
                isDragging = true;
                currentToken = this;
                
                // Calcola l'offset del mouse rispetto al token considerando la trasformazione
                const rect = gameCanvas.getBoundingClientRect();
                const tokenRect = this.getBoundingClientRect();
                
                // Coordinate del mouse nel sistema del canvas trasformato
                const mouseX = (e.clientX - rect.left - panX) / scale;
                const mouseY = (e.clientY - rect.top - panY) / scale;
                
                // Coordinate attuali del token
                const tokenX = parseInt(this.style.left) || 0;
                const tokenY = parseInt(this.style.top) || 0;
                
                // Offset del mouse rispetto al centro del token
                startX = mouseX - tokenX;
                startY = mouseY - tokenY;
                
                this.style.zIndex = '1000';
                e.preventDefault();
                e.stopPropagation();
            });
            
            token.addEventListener('mousemove', function(e) {
                if (isDragging) {
                    hasMoved = true;
                }
            });
            
            token.addEventListener('mouseup', function(e) {
                if (e.button !== 0) return;
                
                const clickDuration = Date.now() - mouseDownTime;
                
                // Se è stato un click veloce senza movimento, seleziona il token
                if (clickDuration < 200 && !hasMoved) {
                    selectToken(this);
                }
            });
            
            token.addEventListener('click', function(e) {
                e.stopPropagation(); // Previeni la deselezione dal click sul canvas
            });
        }
        
        document.addEventListener('mousemove', function(e) {
            if (isDragging && currentToken) {
                // Calcola le coordinate del mouse nel sistema del canvas trasformato
                const rect = gameCanvas.getBoundingClientRect();
                const mouseX = (e.clientX - rect.left - panX) / scale;
                const mouseY = (e.clientY - rect.top - panY) / scale;
                
                // Calcola la nuova posizione del token
                const newX = mouseX - startX;
                const newY = mouseY - startY;
                
                // Snap alla griglia - centra il token nella cella
                const gridSize = 50;
                const tokenSize = 48; // Dimensione del token dal CSS
                const offset = (gridSize - tokenSize) / 2; // Offset per centrare il token
                
                const snappedX = Math.round(newX / gridSize) * gridSize + offset;
                const snappedY = Math.round(newY / gridSize) * gridSize + offset;
                
                currentToken.style.left = snappedX + 'px';
                currentToken.style.top = snappedY + 'px';
            }
        });
        
        document.addEventListener('mouseup', function() {
            if (isDragging && currentToken) {
                // Calcola nuove coordinate griglia
                const gridSize = 50;
                const tokenSize = 48;
                const offset = (gridSize - tokenSize) / 2;
                
                // Sottrai l'offset per ottenere le coordinate corrette della griglia
                const pixelX = parseInt(currentToken.style.left) - offset;
                const pixelY = parseInt(currentToken.style.top) - offset;
                const gridX = Math.round(pixelX / gridSize);
                const gridY = Math.round(pixelY / gridSize);
                
                // Aggiorna posizione nel backend
                const tokenId = currentToken.dataset.tokenId;
                if (tokenId) {
                    updateTokenPosition(tokenId, gridX, gridY);
                }
                
                currentToken.style.zIndex = '';
                isDragging = false;
                currentToken = null;
            }
        });
        
        // Funzione rimossa: addTestTokens() - i token di esempio sono stati eliminati
        
        // Funzione per ottenere il colore del token
        function getTokenColor(type) {
            const colors = {
                hero: 'linear-gradient(45deg, #ff6b6b, #ee5a24)',
                warrior: 'linear-gradient(45deg, #4834d4, #686de0)',
                mage: 'linear-gradient(45deg, #00d2d3, #54a0ff)',
                rogue: 'linear-gradient(45deg, #1dd1a1, #10ac84)',
                orc: 'linear-gradient(45deg, #e74c3c, #c0392b)',
                dragon: 'linear-gradient(45deg, #8e44ad, #9b59b6)',
                skeleton: 'linear-gradient(45deg, #95a5a6, #7f8c8d)',
                goblin: 'linear-gradient(45deg, #27ae60, #2ecc71)'
            };
            return colors[type] || '#666';
        }
        
        // Gestione zoom e pan del canvas - stile Roll20
        // scale, panX, panY sono già dichiarati in map.js
        // Event listeners per pan e zoom sono ora gestiti in map.js
        // per evitare conflitti e duplicazioni
        

        
        // Gestione dadi
        document.querySelectorAll('.dice-btn').forEach(button => {
            button.addEventListener('click', function() {
                const diceType = this.dataset.dice;
                const sides = parseInt(diceType.substring(1));
                const result = Math.floor(Math.random() * sides) + 1;
                addChatMessage('Sistema', `Lancio ${diceType}: ${result}`);
            });
        });
        
        // Inizializzazione
        document.addEventListener('DOMContentLoaded', function() {
            addChatMessage('Sistema', 'Sessione iniziata. Buona fortuna!');
            loadTokens();
            
            // Token di test rimossi - ora i token vengono caricati solo dal database
            
            // Inizializzazione zoom e posizione canvas ora gestita in map.js
            // per evitare conflitti con le funzioni definite lì
            
            // Event listener per il pulsante Back to Campaign
            const backToCampaignBtn = document.getElementById('backToCampaign');
            if (backToCampaignBtn) {
                backToCampaignBtn.addEventListener('click', function() {
                    window.location.href = '/campaigns';
                });
            }
        });
    </script>
</body>
</html>
